version: "3.9"

services:
  label-reporter:
    image: alpine:latest
    container_name: homelab-label-reporter
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./reports:/opt/home-lab/homelab/label-reporter/reports
    environment:
      - REPORT_INTERVAL=30
      - EDGE_SERVER_URL=http://edge-server:8080
    networks:
      - homelab-net
    command: >-
      sh -c '
      apk add --no-cache curl jq &&
      
      while true; do
        echo "Scanning for containers with Caddy labels..." &&
        
        # Get all running containers with caddy.expose=true
        containers=$(docker ps --format "{{.Names}}" | while read name; do
          if docker inspect "$name" --format "{{.Config.Labels.caddy.expose}}" | grep -q "true"; then
            echo "$name"
          fi
        done) &&
        
        # Initialize report array
        report="[]" &&
        
        # Generate report for each container
        for container in $containers; do
          labels=$(docker inspect "$container" --format "{{json .Config.Labels}}") &&
          name=$(docker inspect "$container" --format "{{.Name}}") &&
          container_id=$(docker inspect "$container" --format "{{.Id}}") &&
          
          # Extract Caddy labels
          expose=$(echo "$labels" | jq -r ".caddy.expose // empty") &&
          path=$(echo "$labels" | jq -r ".caddy.path // empty") &&
          host_port=$(echo "$labels" | jq -r ".caddy.host_port // empty") &&
          root=$(echo "$labels" | jq -r ".caddy.root // empty") &&
          fqdn=$(echo "$labels" | jq -r ".caddy.fqdn // empty") &&
          
          if [[ "$expose" == "true" ]]; then
            # Get container port mapping
            port_mapping=$(docker port "$container" 2>/dev/null | head -1 | cut -d: -f2 || echo "") &&
            
            # If no host_port specified, try to derive from port mapping
            if [[ -z "$host_port" && -n "$port_mapping" ]]; then
              host_port="$port_mapping"
            fi &&
            
            # Create service entry
            service_entry=$(jq -n \
              --arg name "$name" \
              --arg path "$path" \
              --arg host_port "$host_port" \
              --arg root "$root" \
              --arg fqdn "$fqdn" \
              --arg container_id "$container_id" \
              '{
                name: $name,
                path: $path,
                host_port: $host_port,
                root: $root,
                fqdn: $fqdn,
                source: "docker-inspect",
                container_id: $container_id
              }') &&
            
            # Add to report
            report=$(echo "$report" | jq --argjson entry "$service_entry" '. += [$entry]')
          fi
        done &&
        
        # Write report to file
        echo "$report" > /opt/home-lab/homelab/label-reporter/reports/caddy-services.json &&
        
        # Send report to edge server if configured
        if [[ -n "$EDGE_SERVER_URL" ]]; then
          curl -s -X POST "$EDGE_SERVER_URL/api/services" \
            -H "Content-Type: application/json" \
            -d "$report" || echo "Failed to send report to edge server"
        fi &&
        
        # Sleep for specified interval
        sleep ${REPORT_INTERVAL:-30}
      done'

networks:
  homelab-net:
    external: true
